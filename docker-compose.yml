services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: travel-tracker-postgres
    environment:
      POSTGRES_DB: personal_database
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - travel-tracker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d personal_database"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Development version (default)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: travel-tracker-app-dev
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://myuser:mypassword@postgres:5432/personal_database
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - travel-tracker-network

  # Production version (optional)
  app-prod:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: travel-tracker-app-prod
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://myuser:mypassword@postgres:5432/personal_database
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - travel-tracker-network
    profiles:
      - prod

  sync: 
    build: 
      context: .
      dockerfile: Dockerfile.sync
    depends_on: 
      app: 
        condition: service_started

volumes:
  postgres_data:

networks:
  travel-tracker-network:
    driver: bridge