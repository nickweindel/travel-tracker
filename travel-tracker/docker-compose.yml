version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: travel-tracker-postgres
    environment:
      POSTGRES_DB: personal_database
      POSTGRES_USER: nickweindel
      POSTGRES_PASSWORD: $(POSTGRES_PASSWORD)
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - travel-tracker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: travel-tracker-app
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/travel_tracker
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - travel-tracker-network
    restart: unless-stopped

  # Development version (optional)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: travel-tracker-app-dev
    ports:
      - "3001:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/travel_tracker
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - travel-tracker-network
    profiles:
      - dev

volumes:
  postgres_data:

networks:
  travel-tracker-network:
    driver: bridge
